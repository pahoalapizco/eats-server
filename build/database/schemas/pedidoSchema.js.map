{"version":3,"sources":["../../../src/database/schemas/pedidoSchema.js"],"names":["Schema","mongoose","metodoPago","estatus","PEDIDO_PENDIENTE","PEDIDO_PROCESO","PEDIDO_ENVIADO","PEDIDO_ETREGADO","pedidoSchema","restaurant","type","Types","ObjectId","required","ref","usuario","repartidor","total","Number","address","String","detail","platillo","cantidad","importe","timestamps","prototype","valueOf","toString","module","exports"],"mappings":"AAAA;;;;AAEA;;AACA;;AAQA,IAAMA,MAAM,GAAGC,qBAASD,MAAxB;AACA,IAAME,UAAU,GAAG,CAAC,QAAD,EAAW,SAAX,EAAsB,UAAtB,CAAnB;AACA,IAAMC,OAAO,GAAG,CAACC,yBAAD,EAAmBC,uBAAnB,EAAmCC,uBAAnC,EAAmDC,wBAAnD,CAAhB;AAEA,IAAMC,YAAY,GAAG,IAAIR,MAAJ,CAAW;AAC9BS,EAAAA,UAAU,EAAE;AACVC,IAAAA,IAAI,EAAEV,MAAM,CAACW,KAAP,CAAaC,QADT;AAEVC,IAAAA,QAAQ,EAAE,IAFA;AAGVC,IAAAA,GAAG,EAAE;AAHK,GADkB;AAM9BC,EAAAA,OAAO,EAAE;AACPL,IAAAA,IAAI,EAAEV,MAAM,CAACW,KAAP,CAAaC,QADZ;AAEPC,IAAAA,QAAQ,EAAE,IAFH;AAGPC,IAAAA,GAAG,EAAE;AAHE,GANqB;AAW9BE,EAAAA,UAAU,EAAE;AACVN,IAAAA,IAAI,EAAEV,MAAM,CAACW,KAAP,CAAaC,QADT;AAEVE,IAAAA,GAAG,EAAE;AAFK,GAXkB;AAe9BG,EAAAA,KAAK,EAAE;AACLP,IAAAA,IAAI,EAAEQ,MADD;AAELL,IAAAA,QAAQ,EAAE;AAFL,GAfuB;AAmB9BM,EAAAA,OAAO,EAAE;AACPT,IAAAA,IAAI,EAAEU,MADC;AAEPP,IAAAA,QAAQ,EAAE;AAFH,GAnBqB;AAuB9BX,EAAAA,UAAU,EAAE;AACVQ,IAAAA,IAAI,EAAEU,MADI;AAEVP,IAAAA,QAAQ,EAAE,IAFA;AAGV,YAAMX;AAHI,GAvBkB;AA4B9BC,EAAAA,OAAO,EAAE,CAAC;AACRO,IAAAA,IAAI,EAAEQ,MADE;AAER,eAASd,yBAFD;AAGRS,IAAAA,QAAQ,EAAE,IAHF;AAIR,YAAMV;AAJE,GAAD,CA5BqB;AAkC9BkB,EAAAA,MAAM,EAAE,CAAC;AACPC,IAAAA,QAAQ,EAAE;AACRZ,MAAAA,IAAI,EAAEV,MAAM,CAACW,KAAP,CAAaC,QADX;AAERC,MAAAA,QAAQ,EAAE,IAFF;AAGRC,MAAAA,GAAG,EAAE;AAHG,KADH;AAMPS,IAAAA,QAAQ,EAAE;AACRb,MAAAA,IAAI,EAAEQ,MADE;AAERL,MAAAA,QAAQ,EAAE;AAFF,KANH;AAUPW,IAAAA,OAAO,EAAE;AACPd,MAAAA,IAAI,EAAEQ,MADC;AAEPL,MAAAA,QAAQ,EAAE;AAFH;AAVF,GAAD;AAlCsB,CAAX,EAiDlB;AAAEY,EAAAA,UAAU,EAAE;AAAd,CAjDkB,CAArB;;AAmDAxB,qBAASU,KAAT,CAAeC,QAAf,CAAwBc,SAAxB,CAAkCC,OAAlC,GAA4C,YAAY;AACtD,SAAO,KAAKC,QAAL,EAAP;AACD,CAFD;;AAIAC,MAAM,CAACC,OAAP,GAAiBtB,YAAjB","sourcesContent":["'use strict'\r\n\r\nimport mongoose from 'mongoose'\r\nimport\r\n{\r\n  PEDIDO_PENDIENTE,\r\n  PEDIDO_PROCESO,\r\n  PEDIDO_ENVIADO,\r\n  PEDIDO_ETREGADO\r\n} from '../../config/globals'\r\n\r\nconst Schema = mongoose.Schema\r\nconst metodoPago = ['PayPal', 'Tarjeta', 'Efectivo']\r\nconst estatus = [PEDIDO_PENDIENTE, PEDIDO_PROCESO, PEDIDO_ENVIADO, PEDIDO_ETREGADO]\r\n\r\nconst pedidoSchema = new Schema({\r\n  restaurant: {\r\n    type: Schema.Types.ObjectId,\r\n    required: true,\r\n    ref: 'restaurantes'\r\n  },\r\n  usuario: {\r\n    type: Schema.Types.ObjectId,\r\n    required: true,\r\n    ref: 'usuarios'\r\n  },\r\n  repartidor: {\r\n    type: Schema.Types.ObjectId,\r\n    ref: 'repartidores'\r\n  },\r\n  total: {\r\n    type: Number,\r\n    required: true\r\n  },\r\n  address: {\r\n    type: String,\r\n    required: true\r\n  },\r\n  metodoPago: {\r\n    type: String,\r\n    required: true,\r\n    enum: metodoPago\r\n  },\r\n  estatus: [{\r\n    type: Number,\r\n    default: PEDIDO_PENDIENTE,\r\n    required: true,\r\n    enum: estatus\r\n  }],\r\n  detail: [{\r\n    platillo: {\r\n      type: Schema.Types.ObjectId,\r\n      required: true,\r\n      ref: 'platillos'\r\n    },\r\n    cantidad: {\r\n      type: Number,\r\n      required: true\r\n    },\r\n    importe: {\r\n      type: Number,\r\n      required: true\r\n    }\r\n  }]\r\n}, { timestamps: true })\r\n\r\nmongoose.Types.ObjectId.prototype.valueOf = function () {\r\n  return this.toString()\r\n}\r\n\r\nmodule.exports = pedidoSchema\r\n"],"file":"pedidoSchema.js"}